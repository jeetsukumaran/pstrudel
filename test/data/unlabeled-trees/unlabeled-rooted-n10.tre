#NEXUS

[ All 10-tip unlabeled rooted bifurcating tree topologies. ]


BEGIN TAXA;

    DIMENSIONS NTAX=10;
    TAXLABELS
        t01 
        t02 
        t03 
        t04 
        t05 
        t06 
        t07 
        t08 
        t09 
        t10 
  ;
END;

BEGIN TREES;

    TREE 1 = [&R] (t01,(t02,(t03,(t04,(t05,(t06,(t07,(t08,(t09,t10)))))))));

    TREE 2 = [&R] (t01,(t02,(t03,(t04,(t05,(t06,((t07,t08),(t09,t10))))))));

    TREE 3 = [&R] (t01,(t02,(t03,(t04,(t05,((t06,t07),(t08,(t09,t10))))))));

    TREE 4 = [&R] (t01,(t02,(t03,(t04,((t05,t06),(t07,(t08,(t09,t10))))))));

    TREE 5 = [&R] (t01,(t02,(t03,(t04,((t05,t06),((t07,t08),(t09,t10)))))));

    TREE 6 = [&R] (t01,(t02,(t03,(t04,((t05,(t06,t07)),(t08,(t09,t10)))))));

    TREE 7 = [&R] (t01,(t02,(t03,((t04,t05),(t06,(t07,(t08,(t09,t10))))))));

    TREE 8 = [&R] (t01,(t02,(t03,((t04,t05),(t06,((t07,t08),(t09,t10)))))));

    TREE 9 = [&R] (t01,(t02,(t03,((t04,t05),((t06,t07),(t08,(t09,t10)))))));

    TREE 10 = [&R] (t01,(t02,(t03,((t04,(t05,t06)),(t07,(t08,(t09,t10)))))));

    TREE 11 = [&R] (t01,(t02,(t03,((t04,(t05,t06)),((t07,t08),(t09,t10))))));

    TREE 12 = [&R] (t01,(t02,((t03,t04),(t05,(t06,(t07,(t08,(t09,t10))))))));

    TREE 13 = [&R] (t01,(t02,((t03,t04),(t05,(t06,((t07,t08),(t09,t10)))))));

    TREE 14 = [&R] (t01,(t02,((t03,t04),(t05,((t06,t07),(t08,(t09,t10)))))));

    TREE 15 = [&R] (t01,(t02,((t03,t04),((t05,t06),(t07,(t08,(t09,t10)))))));

    TREE 16 = [&R] (t01,(t02,((t03,t04),((t05,t06),((t07,t08),(t09,t10))))));

    TREE 17 = [&R] (t01,(t02,((t03,t04),((t05,(t06,t07)),(t08,(t09,t10))))));

    TREE 18 = [&R] (t01,(t02,((t03,(t04,t05)),(t06,(t07,(t08,(t09,t10)))))));

    TREE 19 = [&R] (t01,(t02,((t03,(t04,t05)),(t06,((t07,t08),(t09,t10))))));

    TREE 20 = [&R] (t01,(t02,((t03,(t04,t05)),((t06,t07),(t08,(t09,t10))))));

    TREE 21 = [&R] (t01,(t02,((t03,(t04,(t05,t06))),(t07,(t08,(t09,t10))))));

    TREE 22 = [&R] (t01,(t02,((t03,(t04,(t05,t06))),((t07,t08),(t09,t10)))));

    TREE 23 = [&R] (t01,(t02,(((t03,t04),(t05,t06)),((t07,t08),(t09,t10)))));

    TREE 24 = [&R] (t01,((t02,t03),(t04,(t05,(t06,(t07,(t08,(t09,t10))))))));

    TREE 25 = [&R] (t01,((t02,t03),(t04,(t05,(t06,((t07,t08),(t09,t10)))))));

    TREE 26 = [&R] (t01,((t02,t03),(t04,(t05,((t06,t07),(t08,(t09,t10)))))));

    TREE 27 = [&R] (t01,((t02,t03),(t04,((t05,t06),(t07,(t08,(t09,t10)))))));

    TREE 28 = [&R] (t01,((t02,t03),(t04,((t05,t06),((t07,t08),(t09,t10))))));

    TREE 29 = [&R] (t01,((t02,t03),(t04,((t05,(t06,t07)),(t08,(t09,t10))))));

    TREE 30 = [&R] (t01,((t02,t03),((t04,t05),(t06,(t07,(t08,(t09,t10)))))));

    TREE 31 = [&R] (t01,((t02,t03),((t04,t05),(t06,((t07,t08),(t09,t10))))));

    TREE 32 = [&R] (t01,((t02,t03),((t04,t05),((t06,t07),(t08,(t09,t10))))));

    TREE 33 = [&R] (t01,((t02,t03),((t04,(t05,t06)),(t07,(t08,(t09,t10))))));

    TREE 34 = [&R] (t01,((t02,t03),((t04,(t05,t06)),((t07,t08),(t09,t10)))));

    TREE 35 = [&R] (t01,((t02,(t03,t04)),(t05,(t06,(t07,(t08,(t09,t10)))))));

    TREE 36 = [&R] (t01,((t02,(t03,t04)),(t05,(t06,((t07,t08),(t09,t10))))));

    TREE 37 = [&R] (t01,((t02,(t03,t04)),(t05,((t06,t07),(t08,(t09,t10))))));

    TREE 38 = [&R] (t01,((t02,(t03,t04)),((t05,t06),(t07,(t08,(t09,t10))))));

    TREE 39 = [&R] (t01,((t02,(t03,t04)),((t05,t06),((t07,t08),(t09,t10)))));

    TREE 40 = [&R] (t01,((t02,(t03,t04)),((t05,(t06,t07)),(t08,(t09,t10)))));

    TREE 41 = [&R] (t01,((t02,(t03,(t04,t05))),(t06,(t07,(t08,(t09,t10))))));

    TREE 42 = [&R] (t01,((t02,(t03,(t04,t05))),(t06,((t07,t08),(t09,t10)))));

    TREE 43 = [&R] (t01,((t02,(t03,(t04,t05))),((t06,t07),(t08,(t09,t10)))));

    TREE 44 = [&R] (t01,(((t02,t03),(t04,t05)),(t06,(t07,(t08,(t09,t10))))));

    TREE 45 = [&R] (t01,(((t02,t03),(t04,t05)),(t06,((t07,t08),(t09,t10)))));

    TREE 46 = [&R] (t01,(((t02,t03),(t04,t05)),((t06,t07),(t08,(t09,t10)))));

    TREE 47 = [&R] ((t01,t02),(t03,(t04,(t05,(t06,(t07,(t08,(t09,t10))))))));

    TREE 48 = [&R] ((t01,t02),(t03,(t04,(t05,(t06,((t07,t08),(t09,t10)))))));

    TREE 49 = [&R] ((t01,t02),(t03,(t04,(t05,((t06,t07),(t08,(t09,t10)))))));

    TREE 50 = [&R] ((t01,t02),(t03,(t04,((t05,t06),(t07,(t08,(t09,t10)))))));

    TREE 51 = [&R] ((t01,t02),(t03,(t04,((t05,t06),((t07,t08),(t09,t10))))));

    TREE 52 = [&R] ((t01,t02),(t03,(t04,((t05,(t06,t07)),(t08,(t09,t10))))));

    TREE 53 = [&R] ((t01,t02),(t03,((t04,t05),(t06,(t07,(t08,(t09,t10)))))));

    TREE 54 = [&R] ((t01,t02),(t03,((t04,t05),(t06,((t07,t08),(t09,t10))))));

    TREE 55 = [&R] ((t01,t02),(t03,((t04,t05),((t06,t07),(t08,(t09,t10))))));

    TREE 56 = [&R] ((t01,t02),(t03,((t04,(t05,t06)),(t07,(t08,(t09,t10))))));

    TREE 57 = [&R] ((t01,t02),(t03,((t04,(t05,t06)),((t07,t08),(t09,t10)))));

    TREE 58 = [&R] ((t01,t02),((t03,t04),(t05,(t06,(t07,(t08,(t09,t10)))))));

    TREE 59 = [&R] ((t01,t02),((t03,t04),(t05,(t06,((t07,t08),(t09,t10))))));

    TREE 60 = [&R] ((t01,t02),((t03,t04),(t05,((t06,t07),(t08,(t09,t10))))));

    TREE 61 = [&R] ((t01,t02),((t03,t04),((t05,t06),(t07,(t08,(t09,t10))))));

    TREE 62 = [&R] ((t01,t02),((t03,t04),((t05,t06),((t07,t08),(t09,t10)))));

    TREE 63 = [&R] ((t01,t02),((t03,t04),((t05,(t06,t07)),(t08,(t09,t10)))));

    TREE 64 = [&R] ((t01,t02),((t03,(t04,t05)),(t06,(t07,(t08,(t09,t10))))));

    TREE 65 = [&R] ((t01,t02),((t03,(t04,t05)),(t06,((t07,t08),(t09,t10)))));

    TREE 66 = [&R] ((t01,t02),((t03,(t04,t05)),((t06,t07),(t08,(t09,t10)))));

    TREE 67 = [&R] ((t01,t02),((t03,(t04,(t05,t06))),(t07,(t08,(t09,t10)))));

    TREE 68 = [&R] ((t01,t02),((t03,(t04,(t05,t06))),((t07,t08),(t09,t10))));

    TREE 69 = [&R] ((t01,t02),(((t03,t04),(t05,t06)),((t07,t08),(t09,t10))));

    TREE 70 = [&R] ((t01,(t02,t03)),(t04,(t05,(t06,(t07,(t08,(t09,t10)))))));

    TREE 71 = [&R] ((t01,(t02,t03)),(t04,(t05,(t06,((t07,t08),(t09,t10))))));

    TREE 72 = [&R] ((t01,(t02,t03)),(t04,(t05,((t06,t07),(t08,(t09,t10))))));

    TREE 73 = [&R] ((t01,(t02,t03)),(t04,((t05,t06),(t07,(t08,(t09,t10))))));

    TREE 74 = [&R] ((t01,(t02,t03)),(t04,((t05,t06),((t07,t08),(t09,t10)))));

    TREE 75 = [&R] ((t01,(t02,t03)),(t04,((t05,(t06,t07)),(t08,(t09,t10)))));

    TREE 76 = [&R] ((t01,(t02,t03)),((t04,t05),(t06,(t07,(t08,(t09,t10))))));

    TREE 77 = [&R] ((t01,(t02,t03)),((t04,t05),(t06,((t07,t08),(t09,t10)))));

    TREE 78 = [&R] ((t01,(t02,t03)),((t04,t05),((t06,t07),(t08,(t09,t10)))));

    TREE 79 = [&R] ((t01,(t02,t03)),((t04,(t05,t06)),(t07,(t08,(t09,t10)))));

    TREE 80 = [&R] ((t01,(t02,t03)),((t04,(t05,t06)),((t07,t08),(t09,t10))));

    TREE 81 = [&R] ((t01,(t02,(t03,t04))),(t05,(t06,(t07,(t08,(t09,t10))))));

    TREE 82 = [&R] ((t01,(t02,(t03,t04))),(t05,(t06,((t07,t08),(t09,t10)))));

    TREE 83 = [&R] ((t01,(t02,(t03,t04))),(t05,((t06,t07),(t08,(t09,t10)))));

    TREE 84 = [&R] ((t01,(t02,(t03,t04))),((t05,t06),(t07,(t08,(t09,t10)))));

    TREE 85 = [&R] ((t01,(t02,(t03,t04))),((t05,t06),((t07,t08),(t09,t10))));

    TREE 86 = [&R] ((t01,(t02,(t03,t04))),((t05,(t06,t07)),(t08,(t09,t10))));

    TREE 87 = [&R] (((t01,t02),(t03,t04)),(t05,(t06,(t07,(t08,(t09,t10))))));

    TREE 88 = [&R] (((t01,t02),(t03,t04)),(t05,(t06,((t07,t08),(t09,t10)))));

    TREE 89 = [&R] (((t01,t02),(t03,t04)),(t05,((t06,t07),(t08,(t09,t10)))));

    TREE 90 = [&R] (((t01,t02),(t03,t04)),((t05,t06),(t07,(t08,(t09,t10)))));

    TREE 91 = [&R] (((t01,t02),(t03,t04)),((t05,t06),((t07,t08),(t09,t10))));

    TREE 92 = [&R] (((t01,t02),(t03,t04)),((t05,(t06,t07)),(t08,(t09,t10))));

    TREE 93 = [&R] ((t01,(t02,(t03,(t04,t05)))),(t06,(t07,(t08,(t09,t10)))));

    TREE 94 = [&R] ((t01,(t02,(t03,(t04,t05)))),(t06,((t07,t08),(t09,t10))));

    TREE 95 = [&R] ((t01,(t02,(t03,(t04,t05)))),((t06,t07),(t08,(t09,t10))));

    TREE 96 = [&R] ((t01,((t02,t03),(t04,t05))),(t06,((t07,t08),(t09,t10))));

    TREE 97 = [&R] ((t01,((t02,t03),(t04,t05))),((t06,t07),(t08,(t09,t10))));

    TREE 98 = [&R] (((t01,t02),(t03,(t04,t05))),((t06,t07),(t08,(t09,t10))));

END;

